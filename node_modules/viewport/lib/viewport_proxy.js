// Generated by CoffeeScript 1.4.0
var ViewportProxy;

module.exports = ViewportProxy = (function() {

  function ViewportProxy(sockets) {
    var _this = this;
    this.sockets = sockets;
    this.viewports = {};
    this.index = {
      byId: {}
    };
    this.sockets.on('connection', function(socket) {
      socket.on('disconnect', function(data) {
        return _this.handleDisconnect(socket);
      });
      socket.on('viewport:connect', function(data) {
        return _this.handleConnect(socket, data);
      });
      return socket.on('viewport:event', function(data) {
        return _this.handleEvent(socket, data);
      });
    });
  }

  ViewportProxy.prototype.handleConnect = function(socket, data) {
    var name, _base;
    name = data.name;
    (_base = this.viewports)[name] || (_base[name] = {
      sockets: {}
    });
    this.viewports[name].sockets[socket.id] = socket;
    this.index.byId[socket.id] = name;
    console.log('CONNECTED', data);
    console.log('viewports', this.viewports);
    console.log('index', this.index);
    return socket.emit('viewport:connect:ok', {});
  };

  ViewportProxy.prototype.handleDisconnect = function(socket) {
    var name;
    name = this.index.byId[socket.id];
    delete this.viewports[name].sockets[socket.id];
    delete this.index.byId[socket.id];
    console.log('DISCONNECTED', name);
    console.log('viewports', this.viewports);
    return console.log('index', this.index);
  };

  ViewportProxy.prototype.handleEvent = function(socket, data) {
    return console.log({
      'event': data
    });
  };

  return ViewportProxy;

})();
