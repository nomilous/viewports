require('nez').realize 'Uplink', (Uplink, test, context) -> 

    context 'on connect', (it) ->

        it 'sends viewport:connect on first connect', (done) ->

            Uplink.connected.should.equal false
            Uplink.handle 'NAME',
                socket: sessionid: 'ID'
                on: (e, cb) -> cb()
                emit: (event) -> 
                    Uplink.connected.should.equal true
                    event.should.equal 'viewport:connect'
                    test done

        it 'sends viewport:reconnect on subsequent connect', (done) -> 

            Uplink.connected.should.equal true
            Uplink.handle 'NAME', 
                socket: sessionid: 'NEWID'
                on: (e, cb) -> cb()
                emit: (event) -> 
                    event.should.equal 'viewport:reconnect'
                    test done


        it 'sends name of viewport and session id on connect', (done) -> 

            Uplink.connected = false

            Uplink.handle 'NAME', 
                socket: sessionid: 'ID'
                on: (e, cb) -> cb()
                emit: (event, data) ->

                    data.should.eql 
                        name: 'NAME'
                        sessionid: 'ID'

                    test done

        it 'sends original session id and new sessionid on reconnect', (done) -> 

            Uplink.handle 'NAME', 
                socket: sessionid: 'NEW ID'
                on: (e, cb) -> cb()
                emit: (event, data) ->

                    data.should.eql 
                        name: 'NAME'
                        sessionid: 'ID'
                        newsessionid: 'NEW ID'

                    test done



