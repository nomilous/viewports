// Generated by CoffeeScript 1.4.0
var Node,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = Node = (function(_super) {

  __extends(Node, _super);

  function Node() {}

  Node.prototype.start = function(opts) {
    var context;
    if (opts == null) {
      opts = {};
    }
    context = new (require('./context'))(opts);
    if (opts.listen) {
      context.adaptor = this.listen(context);
    }
    if (opts.connect) {
      context.uplink = this.connect(context);
    }
    return context;
  };

  Node.prototype.listen = function(context) {
    return (require('./adaptor')).listen(context);
  };

  Node.prototype.connect = function(context) {
    return (require('./edge')).connect(context);
  };

  return Node;

})(require('./context'));

module.exports = Node;
